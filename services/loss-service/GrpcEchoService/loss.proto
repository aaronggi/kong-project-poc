syntax = "proto3";

//import "google/api/annotations.proto";

option csharp_namespace = "GrpcEchoService";

package loss;

// The greeting service definition.
service Loss {
  // Sends a greeting
  rpc GetEventResult (GetResultRequest) returns (GetEventResultResponse) {
    //option (google.api.http) = {
    //  get: "/loss/{analysisSid}/result/event"
    //};
  }

  rpc CountInteger (CountIntegerRequest) returns (CountIntegerResponse) {

  }

  rpc RunLoss (LossRequest) returns (LossResult) {
    // option (google.api.http) = {
    //   get: "/loss/run/pkg/{package}"
    //   additional_bindings {
    //     get: "/loss/run/pkg/{package}/lat/{location.geoPoint.lat}/lon/{location.geoPoint.lon},
    //   }
    //   additional_bindings {
    //     post: "/loss/run"
    //     body: "*"
    //   }
    // };
}

message CountIntegerRequest {
    int32 count = 1;
}

message CountIntegerResponse {
    repeated int32 numbers = 1;
}

// The request message containing the user's name.
message GetResultRequest {
  int32 analysisSid = 1;
}
		
// The response message containing the greetings.
message GetEventResultResponse {
  int32 analysisSid = 1;
  repeated EventResult result = 2;
}

message EventResult {
  int32 modelCode = 1;
  int32 perilSetCode = 2;
  int32 yearId = 3;
  int32 eventId = 4;
  double groundUp = 5;
  double gross = 6;
  double retained = 7;
  double preCatNet = 8;
}

message Location {
  message GeoPoint {
    double lat = 1;
    double lon = 2;
  }
  string streetAddr = 1;
  string city = 2;
  string subarea = 3;
  string area = 4; 
  string postalCode = 5;
  GeoPoint geoPoint = 6;
}

message LossRequest {
  Location location = 1;
}

message LossResult {
  int32 temp = 1;
}
