version: "3.8"

networks:
  kongnet:
    driver: bridge
    attachable: true

services:
  
  #Our Service
  # loss:
  #   hostname: loss
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: services/loss/Dockerfile
  #   networks: 
  #   - kongnet
  #   ports: 
  #   - 12001:12001
  #   - 8090:8090
  #   - 8081:8081

  bill-loss:
    hostname: bill-loss
    build:
      context: external/kong-poc/GrpcEchoService/GrpcEchoService/
      dockerfile: Dockerfile
    networks:
    - kongnet
    ports:
    - 443:443
        
  #DB for Kong
  kong-database:
    hostname: kong-database
    image: postgres:9.6
    networks:
    - kongnet
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
    - 5432:5432
  
  #Kong Gateway
  kong:
    hostname: kong
    build: 
      context: .
      dockerfile: services/kong/Dockerfile
    networks: 
    - kongnet
    restart: always
    ports:
      - 8000:8000
      - 8001:8001
      - 9080:9080
      - 8443:8443
      - 8444:8444    
      - 9000:9000
    environment:
      #KONG_PREFIX: /usr/local/kong
      KONG_PROXY_LISTEN: 0.0.0.0:8000 reuseport, 0.0.0.0:8443 reuseport ssl http2 backlog=16384, 0.0.0.0:9443 http2 ssl
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_DECLARATIVE_CONFIG: /etc/kong/config.yml
      KONG_PROXY_ERROR_LOG: /dev/stdout
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_LUA_PACKAGE_PATH: /usr/local/custom/?.lua;;
      KONG_PLUGINS: grpc-gateway
    links:
    - kong-database:kong-database
    depends_on:
    - kong-database
    - kong-setup

  #Kong Gateway
  kong-setup:
    build: 
      context: .
      dockerfile: services/kong-setup/Dockerfile
    networks: 
    - kongnet
    restart: on-failure  
    environment:
      KONG_PROXY_LISTEN: 0.0.0.0:8000 reuseport, 0.0.0.0:8443 backlog=16384 reuseport ssl http2, 0.0.0.0:9443 http2 ssl
      KONG_DECLARATIVE_CONFIG: /etc/kong/config.yml
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_LUA_PACKAGE_PATH: /usr/local/custom/?.lua;;
      KONG_PLUGINS: grpc-gateway
    links:
    - kong-database:kong-database
    depends_on:
    - kong-database

# Dashboard
  konga:
    image: pantsel/konga:next
    restart: always
    networks:
    - kongnet
    environment:     
      DB_HOST: kong-database
      DB_PORT: 5432
      DB_USER: kong
      DB_PASSWORD: kong
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      NODE_ENV: development
      NO_AUTH: "true"
    depends_on:
    - kong-database
    - kong-setup
    links:
    - kong:kong
    - kong-database:kong-databse
    ports:
    - "1337:1337"

  kong-map:
    image: yesinteractive/kongmap
    restart: on-failure
    networks: 
    - kongnet
    environment:
      KONGMAP_CLUSTER_JSON: >-
        { 
          "my cluster": 
          {
            "kong_admin_api_url": "http://kong:8001", 
            "kong_edit_config": "true", 
            "kong_ent": "false",    
            "kong_ent_token": "admin",    
            "kong_ent_token_name": "kong-admin-token",    
            "kong_ent_manager_url": "http://kongmanager_url:8002"  
          }
        }
    ports:
    - 8100:80
    - 8143:443
    links:
    - kong:kong
    depends_on:
    - kong


